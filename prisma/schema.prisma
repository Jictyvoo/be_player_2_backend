generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  username     String        @unique
  password     String
  RefreshToken RefreshToken?

  @@map("users")
}

model RefreshToken {
  id           String   @id @default(uuid())
  sessionToken String   @default(uuid()) @map("session_token")
  expiresAt    DateTime @map("expires_at")
  userId       String   @unique @map("user_id")
  user         User     @relation(fields: [userId], references: [id])

  @@map("refresh_tokens")
}

model City {
  id         String     @id @default(uuid())
  name       String
  acronym    String?
  identifier BigInt
  District   District[]

  @@map("cities")
}

model District {
  id      String    @id @default(uuid())
  name    String
  cityId  String    @map("city_id")
  city    City      @relation(fields: [cityId], references: [id])
  Address Address[]

  @@index([cityId], name: "city_id")
  @@map("districts")
}

model Cep {
  id        String    @id @default(uuid())
  cep       Int
  placeType String    @map("place_type")
  route     String
  Address   Address[]

  @@map("ceps")
}

model Address {
  id         String       @id @default(uuid())
  number     String?
  complement String?
  reference  String?
  cepId      String       @map("cep_id")
  districtId String       @map("district_id")
  cep        Cep          @relation(fields: [cepId], references: [id])
  district   District     @relation(fields: [districtId], references: [id])
  Enterprise Enterprise[]

  @@index([cepId], name: "cep_id")
  @@index([districtId], name: "district_id")
  @@map("addresses")
}

model BranchHeadOffice {
  id          String       @id @default(uuid())
  identifier  Int          @unique
  description String
  Enterprise  Enterprise[]

  @@map("branch_head_offices")
}

model EnterpriseRegistration {
  id          String       @id @default(uuid())
  status      Int          @unique
  description String
  date        DateTime
  reason      Int
  Enterprise  Enterprise[]

  @@map("enterprise_registrations")
}

model Cnae {
  id           String     @id @default(uuid())
  number       BigInt     @unique
  description  String
  isFiscal     Boolean    @map("is_fiscal")
  enterpriseId String     @map("enterprise_id")
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])

  @@index([enterpriseId], name: "enterprise_id")
  @@map("cnaes")
}

model BusinessSize {
  id          String       @id @default(uuid())
  size        Int
  description String
  Enterprise  Enterprise[]

  @@map("business_sizes")
}

model Enterprise {
  id                            String                 @id @default(uuid())
  cnpj                          String                 @unique
  corporateName                 String                 @map("corporate_name")
  fantasyName                   String                 @map("fantasy_name")
  outsideCityName               String?                @map("outside_city_name")
  legalNatureCode               BigInt?                @map("legal_nature_code")
  activityStartDate             DateTime               @map("activity_start_date")
  qualificationOfTheResponsible Int                    @map("qualification_of_the_responsible")
  shareCapital                  BigInt                 @map("share_capital")
  branchHeadOfficeId            String                 @map("branch_head_office_id")
  enterpriseRegistrationId      String                 @map("enterprise_registration_id")
  addressId                     String                 @map("address_id")
  businessSizeId                String                 @map("business_size_id")
  createdAt                     DateTime               @map("created_at")
  updatedAt                     DateTime               @map("updated_at")
  deletedAt                     DateTime               @map("deleted_at")
  Address                       Address                @relation(fields: [addressId], references: [id])
  BranchHeadOffice              BranchHeadOffice       @relation(fields: [branchHeadOfficeId], references: [id])
  size                          BusinessSize           @relation(fields: [businessSizeId], references: [id])
  registration                  EnterpriseRegistration @relation(fields: [enterpriseRegistrationId], references: [id])
  Cnae                          Cnae[]
  Mei                           Mei?
  NationalSimple                NationalSimple?
  Phones                        Phone[]

  @@index([addressId], name: "address_id")
  @@index([branchHeadOfficeId], name: "branch_head_office_id")
  @@index([businessSizeId], name: "business_size_id")
  @@index([enterpriseRegistrationId], name: "enterprise_registration_id")
  @@map("enterprises")
}

model Mei {
  id               String     @id @default(uuid())
  specialSituation String?    @map("special_situation")
  situationDate    DateTime?  @map("situation_date")
  enterpriseId     String     @unique @map("enterprise_id")
  enterprise       Enterprise @relation(fields: [enterpriseId], references: [id])

  @@index([enterpriseId], name: "enterprise_id")
  @@map("meis")
}

model NationalSimple {
  id            String     @id @default(uuid())
  date          DateTime?
  exclusionDate DateTime?  @map("exclusion_date")
  enterpriseId  String     @unique @map("enterprise_id")
  enterprise    Enterprise @relation(fields: [enterpriseId], references: [id])

  @@index([enterpriseId], name: "enterprise_id")
  @@map("national_simples")
}

model Phone {
  id           String     @id @default(uuid())
  countryCode  String?    @map("country_code")
  ddd          Int?
  number       Int
  type         PhoneType
  enterpriseId String     @map("enterprise_id")
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])

  @@index([enterpriseId], name: "enterprise_id")
  @@map("phones")
}

enum PhoneType {
  fax
  mobile
  local
}
